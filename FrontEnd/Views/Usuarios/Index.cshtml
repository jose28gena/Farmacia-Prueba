<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" rel="stylesheet">

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    var currentPage = 1; // Variable para almacenar la página actual

    $(document).ready(function () {

        // Evento de entrada para la búsqueda
        $('#searchInput').on('input', debouncedLoadTable);

        // Evento de cambio para el selector de tamaño de página
        $('#pageSizeSelect').change(loadTable);

        //Primera carga de la tabla
        loadTable();
        $('#pageSizeSelect').change(function () {
            currentPage = 1; // Restablece a la primera página al cambiar el tamaño de página
            loadTable(currentPage);
        });

        $('#prevPage').click(function (e) {
            e.preventDefault();
            if (currentPage > 1) {
                currentPage--;
                loadTable(currentPage);
            }
        });

        $('#nextPage').click(function (e) {
            e.preventDefault();
            currentPage++;
            loadTable(currentPage);
        });
        $('#togglePassword').click(function () {
            // jQuery para cambiar el tipo de campo
            var passwordInput = $('#password');
            var passwordInputType = passwordInput.attr('type') === 'password' ? 'text' : 'password';
            passwordInput.attr('type', passwordInputType);

            // Cambiar el ícono del botón
            $(this).find('i').toggleClass('fa-eye fa-eye-slash');
        });
    });
    function debounce(func, wait, immediate) {
        var timeout;
        return function () {
            var context = this, args = arguments;
            var later = function () {
                timeout = null;
                if (!immediate) func.apply(context, args);
            };
            var callNow = immediate && !timeout;
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
            if (callNow) func.apply(context, args);
        };
    }
    // Utilizando la función de debounce para manejar la entrada del filtro
    var debouncedLoadTable = debounce(function () {
        loadTable();
    }, 800);
    function loadTable(pageNum = 1) {
        var filtro = $('#searchInput').val();
        var registrosPorPagina = $('#pageSizeSelect').val(); // Obtiene el número de registros por página del selector

        $.ajax({
            url: API_URLS.ObtenerUsuariosPaginados,
            headers: {
                "accept": "text/plain",
                "Content-Type": "application/json",
                "Authorization": 'Bearer ' + localStorage.getItem('token')
            },
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                pagina: pageNum,
                registrosPorPagina: registrosPorPagina,
                filtro: filtro
            }),
            success: function (response) {
                updatePaginationControls(pageNum, response.totalPages);
                updatePageInfo(response.totalRows, registrosPorPagina, response.data.length, pageNum);
                console.log('Respuesta del servidor:', response);
                // Crear tabla HTML con clases de Bootstrap
                var table = '<table class="table table-striped table-bordered table-hover">';
                table += '<thead class="thead-dark"><tr><th>Nombre</th><th>email</th><th>fecha Creación</th><th>Acciones</th></tr></thead>';
                table += '<tbody>';

                for (var i = 0; i < response.data.length; i++) {
                    table += '<tr>';
             
                    table += '<td>' + response.data[i].nombre + '</td>';
                    table += '<td>' + response.data[i].email + '</td>';
                    table += '<td>' + response.data[i].fechaCreacion + '</td>';
                    table += '<td><button class="btn btn-primary btn-sm mr-2" onclick="openEditModal(' + response.data[i].idUsuario + ')">Editar</button><button class="btn btn-danger btn-danger btn-sm" onclick="openDeleteModal(' + response.data[i].idUsuario + ')">Eliminar</button></td>';

                    table += '</tr>';
                }
                table += '</tbody>';
                table += '</table>';
                // Anexar la tabla al documento
                $('#tableContainer').html(table);
            },
            error: function (xhr, status, error) {
                console.error('Error al hacer la solicitud:', error);
            }
        });
    }
    function openEditModal(idUsuario) {
        // Fetch user data by idUsuario using AJAX
        $.ajax({
            url: API_URLS.usuarioPorId(idUsuario),
            "headers": {
                "accept": "text/plain",
                "Content-Type": "application/json",
                "Authorization": 'Bearer ' + localStorage.getItem('token')
            },
            type: 'GET',
            contentType: 'application/json',
            data: JSON.stringify({
                idUsuario: idUsuario
            }),
            success: function (response) {
                // Populate the modal form with user data
                $('#editModal #idUsuario').val(response.idUsuario);
                $('#editModal #nombre').val(response.nombre);
                $('#editModal #fechaCreacion').val(response.fechaCreacion);
                $('#editModal #email').val(response.email);
                $('#editModal #password').val(response.password);
                $('#editModal #idPerfil').val(response.idPerfil);
               // $('#editModal #estatus').val(response.estatus);
                $('#editModal #estatus').prop('checked', response.estatus === 1);
                // Open the modal
                $('#editModal').modal('show');
            },
            error: function (xhr, status, error) {
                console.error('Error al hacer la solicitud:', error);
            }
        });
    }
    function saveChanges() {
        if (!validateForm()) {
            console.error('Por favor, completa todos los campos requeridos.');
            return; // Detiene la función si la validación falla
        }
        // Get form data
        var idUsuario = $('#editModal #idUsuario').val();
        var nombre = $('#editModal #nombre').val();
        var fechaCreacion = $('#editModal #fechaCreacion').val();
        var email = $('#editModal #email').val();
        var password = $('#editModal #password').val();

        var estatus = $('#editModal #estatus').is(':checked') ? 1 : 0;


        // Create user object


        var isEditOrNew = idUsuario === "" ? 'POST' : 'PUT';
        var user = idUsuario === "" ? {
            "Nombre": nombre,
            "Email": email,
            "Password": password,
            "IdPerfil": 1,
            "Estatus": estatus
        } : {
            "IdUsuario": idUsuario,
            "Nombre": nombre,
            "Email": email,
            "Password": password,
            "IdPerfil": 1,
            "Estatus": estatus
        };
        debugger;
        // Perform save changes request
        $.ajax({
            url: idUsuario === "" ? API_URLS.usuarios : API_URLS.usuarioPorId(idUsuario),
            "headers": {
                "accept": "text/plain",
                "Content-Type": "application/json",
                "Authorization": 'Bearer ' + localStorage.getItem('token')
            },
            type: isEditOrNew,

            data: JSON.stringify(user),
            success: function (response) {
                console.log('Respuesta del servidor:', response);
                // Close the modal
                $('#editModal').modal('hide');
                // Refresh the table
                loadTable();
            },
            error: function (xhr, status, error) {
                console.error('Error al hacer la solicitud:', error);
            }
        });
    }

    function validatePassword() {
        var password = $('#password').val();
        var regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@@$!%*?&])[A-Za-z\d@@$!%*?&]{8,}$/;
        if (!regex.test(password)) {
            $('#passwordValidation').text('La contraseña debe contener al menos una letra mayúscula, una letra minúscula, un número, un carácter especial y tener una longitud mínima de 8 caracteres.');
        } else {
            $('#passwordValidation').text('');
        }
    }

    function openAddModal() {
        // Clear the form fields
        $('#editModal #idUsuario').val('');
        $('#editModal #nombre').val('');
        $('#editModal #fechaCreacion').val('');
        $('#editModal #email').val('');
        $('#editModal #password').val('');
        $('#editModal #idPerfil').val('');
        $('#editModal #estatus').val('');
        $('#editModal #estatus').prop('checked', true);
        // Open the modal
        $('#editModal').modal('show');
    }

    function openDeleteModal(idUsuario) {
        // Show confirmation modal
        $('#deleteModal').modal('show');

        // Set the idUsuario to delete as data attribute of the delete button
        $('#deleteButton').data('idUsuario', idUsuario);
    }

    function confirmDelete() {
        // Get the idUsuario to delete from the data attribute of the delete button
        var idUsuario = $('#deleteButton').data('idUsuario');

        // Perform delete request
        $.ajax({
            url: API_URLS.usuarioPorId(idUsuario),
            headers: {
                "accept": "text/plain",
                "Content-Type": "application/json",
                "Authorization": 'Bearer ' + localStorage.getItem('token')
            },
            type: 'DELETE',
            success: function (response) {
                console.log('Respuesta del servidor:', response);
                // Close the confirmation modal
                $('#deleteModal').modal('hide');
                // Refresh the table
                loadTable();
            },
            error: function (xhr, status, error) {
                console.error('Error al hacer la solicitud:', error);
            }
        });
    }

    function updatePaginationControls(currentPage, totalPages) {
        $('#prevPage').parent().toggleClass('disabled', currentPage <= 1);
        $('#nextPage').parent().toggleClass('disabled', currentPage >= totalPages);
    }
    function updatePageInfo(totalRegistros, registrosPorPagina, registrosEnEstaPagina, pageNum) {
        // Actualiza la interfaz con el número total de registros y la cantidad por página
        $('#totalRegistros').text(totalRegistros);
        $('#registrosPorPagina').text(registrosEnEstaPagina);

        // Calcula e imprime el rango de registros que se está mostrando
        var inicio = (pageNum - 1) * registrosPorPagina + 1;
        var fin = inicio + registrosEnEstaPagina - 1;
        $('#rangoRegistros').text('Mostrando ' + inicio + ' a ' + fin + ' de ' + totalRegistros);
    }
    function validateForm() {
        let isValid = true;
        $('#editForm .form-control').each(function () {
            if ($(this).val() === '' && $(this).prop('required')) {
                $(this).addClass('is-invalid'); // Añade la clase 'is-invalid' de Bootstrap para marcar como error
                isValid = false;
            } else {
                $(this).removeClass('is-invalid');
            }
        });
        return isValid;
    }

</script>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Eliminar Usuario</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>¿Estás seguro de que deseas eliminar este usuario?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="deleteButton" onclick="confirmDelete()">Eliminar</button>
            </div>
        </div>
    </div>
</div>
<!-- Add Button -->

<div class="container mt-3">
    <div class="row mb-3">
        <div class="col">
            <input type="text" class="form-control" id="searchInput" placeholder="Buscar Usuario...">
        </div>
        <div class="col-auto">
            <button type="button" class="btn btn-primary" onclick="openAddModal()">Agregar Nuevo</button>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
        <div id="tableContainer"></div>
        </div>
    </div>
    <div class="form-group">
        <label for="pageSizeSelect">Resultados por página:</label>
        <select class="form-control" id="pageSizeSelect">
            <option value="5">5</option>
            <option value="10" selected>10</option>
            <option value="20">20</option>
            <option value="50">50</option>
        </select>
    </div>
    <div class="row mt-2">
        <div class="col">
            <span id="rangoRegistros">Mostrando 0 a 0 de 0 registros</span>
        </div>
    </div>
    <nav aria-label="Page navigation" class="mt-3">
        <ul class="pagination justify-content-center">
            <li class="page-item"><a class="page-link" href="#" id="prevPage">Anterior</a></li>
            <li class="page-item"><a class="page-link" href="#" id="nextPage">Siguiente</a></li>
        </ul>
    </nav>

</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Editar Usuario</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="$('#editModal').modal('toggle');">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editForm">
                    <div class="form-group">
                        <label for="idUsuario">ID Usuario</label>
                        <input type="text" class="form-control" id="idUsuario" name="idUsuario" readonly>
                    </div>
                    <div class="form-group">
                        <label for="nombre">Nombre</label>
                        <input type="text" class="form-control is-invalid" id="nombre" name="nombre" required>
                    </div>
                    <div class="form-group">
                        <label for="fechaCreacion">Fecha de Creación</label>
                        <input type="text" class="form-control" id="fechaCreacion" name="fechaCreacion" readonly>
                    </div>
                    <div class="form-group">
                        <label for="email">Email</label>
                        <input type="email" class="form-control is-invalid" id="email" name="email" required>
                    </div>
                    <div class="form-group">
                        <label for="password">Contraseña</label>
                        <div class="input-group">
                            <input type="password" class="form-control is-invalid" id="password" name="password" onkeyup="validatePassword()" required>
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <small id="passwordValidation" class="form-text text-danger"></small>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="estatus">Estatus</label>
                        <div class="custom-control custom-switch">
                            <input type="checkbox" class="custom-control-input" id="estatus" name="estatus">
                            <label class="custom-control-label" for="estatus">Activo</label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="$('#editModal').modal('toggle');">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="saveChanges()">Guardar Cambios</button>
            </div>
        </div>
    </div>
</div>